name: Playwright

on:
  pull_request:
    types: [ready_for_review]

env:
  DOTNET_VERSION: '8.0.x'
  APP_PORT: 7109

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Generate self-signed HTTPS certificate
        run: |
          dotnet dev-certs https -ep ./aspnetapp.pfx -p Password123!

      - name: Build app Docker image
        run: |
          docker build -t udsnet-e2e -f src/UDS.Net.Forms.Tests.Runtime/Dockerfile .

      - name: Start app container
        run: |
          docker run -d -p ${{ env.APP_PORT }}:443 --name udsnet-test udsnet-e2e
          echo "Waiting for app to become responsive..."
          sleep 10

      - name: Restore test dependencies
        run: dotnet restore src/UDS.Net.Forms.Tests/UDS.Net.Forms.Tests.csproj
      
      - name: Build Playwright test project
        run: dotnet build src/UDS.Net.Forms.Tests/UDS.Net.Forms.Tests.csproj --no-restore --configuration Debug 

      - name: Install Playwright Browsers
        run: pwsh src/UDS.Net.Forms.Tests/bin/Debug/net8.0/playwright.ps1 install

      - name: Create test results directory
        run: mkdir -p ./test-results

      - name: Run Playwright .NET tests
        env:
          PLAYWRIGHT_HEADLESS: 1
        run: |
          dotnet test src/UDS.Net.Forms.Tests/UDS.Net.Forms.Tests.csproj \
            --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory ./test-results \
            --verbosity quiet \
            || true

      - name: Output test results to summary
        if: always()
        run: |
          echo '### Playwright .NET Test Results' >> $GITHUB_STEP_SUMMARY
          if [ -f test-results/test-results.trx ]; then
            echo '```xml' >> $GITHUB_STEP_SUMMARY
            cat test-results/test-results.trx >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo 'No test-results.trx file found.' >> $GITHUB_STEP_SUMMARY
          fi

      - name: Parse test result summary
        id: parse
        run: |
          passed=$(grep -oP 'Total tests: \K\d+' test-results/test-results.trx | head -1)
          failed=$(grep -oP 'Failed: \K\d+' test-results/test-results.trx | head -1)
          echo "status=✅ Passed: $((passed - failed)) / $passed\n❌ Failed: $failed" >> $GITHUB_OUTPUT

      - name: Comment on PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = `${{ steps.parse.outputs.status }}`;
            const pr = context.payload.pull_request;
            const body = `### 🧪 Playwright (.NET) Test Summary

            ${status}
            `;
            if (pr) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body
              });
            }

      - name: Stop and remove container
        if: always()
        run: |
          docker stop udsnet-test || true
          docker rm udsnet-test || true
