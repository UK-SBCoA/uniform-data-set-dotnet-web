@model PaginatedModel
@{
    var buttonCSS = "relative inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:outline-offset-0";
    var disabledCSS = "relative inline-flex items-center rounded-md bg-slate-50 px-3 py-2 text-sm font-semibold text-gray-500 ring-1 ring-inset ring-gray-300 focus-visible:outline-offset-0";
    var filters = Context.Request.Query["filter"];
    var baseUrl = Url.Page(Model.Action, new
    {
        pageIndex = Model.PageIndex + 1,
        search = Model.Search,
        startDate = Context.Request.Query["startDate"].ToString(),
        endDate = Context.Request.Query["endDate"].ToString()
    });

    var prevBaseUrl = Url.Page(Model.Action, new
    {
        pageIndex = Model.PageIndex - 1,
        search = Model.Search,
        startDate = Context.Request.Query["startDate"].ToString(),
        endDate = Context.Request.Query["endDate"].ToString()
    });

    // Reconstruct multiple filter params manually
    var filterQuery = string.Join("&", filters.Select(f => $"filter={f}"));
    var nextUrl = $"{baseUrl}&{filterQuery}";
    var prevUrl = $"{prevBaseUrl}&{filterQuery}";
}

<nav class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6" aria-label="Pagination">
    <div class="hidden sm:block">
        <p class="text-sm text-gray-700">
            Showing
            <span class="font-medium">@Model.CurrentPageStart</span>
            to
            <span class="font-medium">@Model.CurrentPageEnd</span>
            of
            <span class="font-medium">@Model.Total</span>
            results
        </p>
    </div>
    <div class="flex flex-1 justify-between sm:justify-end">
        @if (Model.HasPreviousPage)
        {
                <a href="@prevUrl" class="@buttonCSS">Previous</a>
        }
        else
        {
            <a disabled class="@disabledCSS">Previous</a>
        }
        @if (Model.HasNextPage)
        {
                <a href="@nextUrl" class="ml-3 @buttonCSS">Next</a>
        }
        else
        {
            <a disabled class="ml-3 @disabledCSS">Next</a>
        }
    </div>
</nav>