@model PacketModel
@{
    var allErrors = Model.PacketSubmissions
        .SelectMany(s => s.Errors)
        .ToList();
}
<turbo-frame id="PacketSubmissions">
    @if (Model.Participation != null && Model.PacketSubmissions != null)
    {
        <div class="space-y-16 py-16 xl:space-y-20">
            <div class="mx-auto max-w-12xl px-4 sm:px-6 lg:px-8">
                <h2 class="mx-auto max-w-2xl text-base font-semibold leading-6 text-gray-900 lg:mx-0 lg:max-w-none">Packet submissions</h2>
                <p class="mt-2 text-sm text-gray-700">A new submission may only be created after all errors have been resolved from previous submission and packet re-finalized.</p>
            </div>
            <div class="mt-6 overflow-hidden border-t border-gray-100">
                <div class="mx-auto max-w-12xl px-4 sm:px-6 lg:px-8">
                    <div class="mx-auto max-w-2xl lg:mx-0 lg:max-w-none">
                        @if (Model.PacketSubmissions.Count > 0)
                        {
                            <table class="w-full text-left">
                                <thead>
                                    <tr>
                                        <th class="w-1/4">Submission date</th>
                                        <th class="w-1/4">Download</th>
                                        <th class="w-1/4">Error count</th>
                                        <th class="w-1/4"><span class="sr-only">Edit errors</span></th>
                                    </tr>
                                </thead>
                                <tbody class="table-fixed">
                                    @for (int i = 0; i < Model.PacketSubmissions.Count - 1; i++)
                                    {
                                        <tr>
                                            <td>
                                                @Model.PacketSubmissions[i].SubmissionDate<br />
                                                @Model.PacketSubmissions[i].CreatedBy
                                            </td>
                                            <td>
                                                @if (!Model.PacketSubmissions[i].ErrorCount.HasValue)
                                                {
                                                    <a asp-page="../PacketSubmissions/Export" asp-route-packetId="@Model.Id" class="text-sm font-medium leading-6 text-indigo-600 hover:text-indigo-500" target="_blank">
                                                        @(Model.PacketSubmissions[i].GetFileName(Model.Participation.LegacyId, Model.VISIT_DATE))
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="text-sm font-medium leading-6 text-gray-600 hover:text-gray-500">@(Model.PacketSubmissions[i].GetFileName(Model.Participation.LegacyId, Model.VISIT_DATE))</span>
                                                }
                                            </td>
                                            <td>
                                                @if (Model.PacketSubmissions[i].ErrorCount.HasValue)
                                                {
                                                    @* TODO: Dispay ration of unresolved errors / errorCount. Unresolved errors are errors with a null "resolvedBy" value *@
                                                    <span>@Model.PacketSubmissions[i].ErrorCount</span>
                                                }
                                                else
                                                {
                                                    <span>Pending response from NACC</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="grid grid-cols-2 justify-items-center">
                                                    @if (Model.PacketSubmissions[i].ErrorCount.HasValue)
                                                    {
                                                        <a class="text-sm font-medium leading-6 text-gray-600 hover:text-gray-500">Success</a>
                                                        <a class="text-sm font-medium leading-6 text-gray-600 hover:text-gray-500">Errors returned</a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <turbo-frame id="ActivePacketSubmission">
                                <table class="w-full text-left">
                                    <thead>
                                        <tr>
                                            <th class="w-1/4"></th>
                                            <th class="w-1/4"></th>
                                            <th class="w-1/4"></th>
                                            <th class="w-1/4"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            @{
                                                var recentIndex = Model.PacketSubmissions.Count() - 1;
                                            }
                                            <td>
                                                @Model.PacketSubmissions[recentIndex].SubmissionDate<br />
                                                @Model.PacketSubmissions[recentIndex].CreatedBy
                                            </td>
                                            <td>
                                                @if (!Model.PacketSubmissions[recentIndex].ErrorCount.HasValue)
                                                {
                                                    <a asp-page="../PacketSubmissions/Export" asp-route-packetId="@Model.Id" class="text-sm font-medium leading-6 text-indigo-600 hover:text-indigo-500" target="_blank">
                                                        @(Model.PacketSubmissions[recentIndex].GetFileName(Model.Participation.LegacyId, Model.VISIT_DATE))
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="text-sm font-medium leading-6 text-gray-600 hover:text-gray-500">@(Model.PacketSubmissions[recentIndex].GetFileName(Model.Participation.LegacyId, Model.VISIT_DATE))</span>
                                                }
                                            </td>
                                            <td>
                                                @if (Model.PacketSubmissions[recentIndex].ErrorCount.HasValue)
                                                {
                                                    @* TODO: Dispay ration of unresolved errors / errorCount. Unresolved errors are errors with a null "resolvedBy" value *@
                                                    <span>@Model.PacketSubmissions[recentIndex].ErrorCount</span>
                                                }
                                                else
                                                {
                                                    <span>Pending response from NACC</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="grid grid-cols-2 justify-items-center">
                                                    @if (Model.PacketSubmissions[recentIndex].ErrorCount.HasValue)
                                                    {
                                                        <a class="text-sm font-medium leading-6 text-gray-600 hover:text-gray-500">Success</a>
                                                        <a class="text-sm font-medium leading-6 text-gray-600 hover:text-gray-500">Errors returned</a>
                                                    }
                                                    else
                                                    {
                                                        <form asp-page="../PacketSubmissionErrors/Create" method="post">
                                                            <input type="hidden" name="PacketId" value="@Model.Id" />
                                                            <input type="hidden" name="PacketSubmissionId" value="@Model.PacketSubmissions[recentIndex].Id" />
                                                            <input type="hidden" name="PacketStatus" value="4" />
                                                            <input type="hidden" name="LegacyId" value="@Model.Participation.LegacyId" />
                                                            <input type="hidden" name="VisitNum" value="@Model.VISITNUM" />
                                                            <button type="submit" class="text-sm font-medium leading-6 text-indigo-600 hover:text-indigo-500">Success</button>
                                                        </form>
                                                        <a asp-page="../PacketSubmissions/Edit" asp-page-handler="Partial" asp-route-packetId="@Model.Id" asp-route-packetSubmissionId="@Model.PacketSubmissions[recentIndex].Id" asp-route-legacyId="@Model.Participation.LegacyId" asp-route-visitNum="@Model.VISITNUM" class="text-sm font-medium leading-6 text-indigo-600 hover:text-indigo-500">Errors returned</a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </turbo-frame>
                        }
                    </div>
                </div>
            </div>
            @if (allErrors.Any())
            {
                <div class="mt-12">
                    <div class="flex items-center justify-between mb-6">
                        <div>
                            <h2 class="text-xl font-bold text-red-700 flex items-center gap-2">
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     fill="none"
                                     viewBox="0 0 24 24"
                                     stroke-width="1.5"
                                     stroke="currentColor"
                                     class="w-6 h-6 text-red-600">
                                    <path stroke-linecap="round" stroke-linejoin="round"
                                          d="M12 9v3.75m0 3.75h.007v.008H12v-.008zM21.75 12a9.75 9.75 0 11-19.5 0 9.75 9.75 0 0119.5 0z" />
                                </svg>
                                Errors / Alerts
                            </h2>
                            <p class="mt-1 text-sm text-gray-600">
                                Review all reported issues across submissions. Resolve them before creating a new submission.
                            </p>
                        </div>

                        <span class="inline-flex items-center rounded-full bg-red-100 px-3 py-1 text-sm font-medium text-red-800 shadow-sm">
                            @allErrors.Count() Issues
                        </span>
                    </div>

                    <div class="overflow-x-auto rounded-2xl border border-red-200 bg-white shadow-lg">
                        <table class="min-w-full divide-y divide-gray-200 text-sm">
                            <thead class="bg-red-50">
                                <tr>
                                    <th class="px-4 py-2 text-left font-semibold text-gray-900">Form</th>
                                    <th class="px-4 py-2 text-left font-semibold text-gray-900">Message</th>
                                    <th class="px-4 py-2 text-left font-semibold text-gray-900">Assigned To</th>
                                    <th class="px-4 py-2 text-left font-semibold text-gray-900">Level</th>
                                    <th class="px-4 py-2 text-left font-semibold text-gray-900">Resolved By</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-100 bg-white">
                                @foreach (var error in allErrors)

                                {
                                    <tr class="hover:bg-red-50 transition">
                                        <td class="px-4 py-2">
                                            @{
                                                var pagePath = $"/UDS4/{error.FormKind}";
                                            }
                                            <a asp-page="@pagePath"
                                               asp-route-id="@Model.Id"
                                               asp-route-packetKind="@Model.PACKET.ToString()"
                                               class="font-medium text-indigo-600 hover:text-indigo-500">
                                                @error.FormKind
                                            </a>
                                        </td>
                                        <td class="px-4 py-2 text-gray-700">@error.Message</td>
                                        <td class="px-4 py-2 text-gray-700">@error.AssignedTo</td>
                                        <td class="px-4 py-2">
                                            <span class="
                                    inline-flex items-center rounded-full px-2 py-1 text-xs font-medium
                                    @(error.Level == PacketSubmissionErrorLevel.Critical || error.Level == PacketSubmissionErrorLevel.Error
                                        ? "bg-red-100 text-red-800"
                                        : "bg-yellow-100 text-yellow-800")">
                                                @error.Level
                                            </span>
                                        </td>
                                        <td class="px-4 py-2 text-gray-700">
                                            @(!string.IsNullOrEmpty(error.ResolvedBy) ? error.ResolvedBy : "Unresolved")
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    }
</turbo-frame>