@model UDS.Net.Forms.Pages.Visits.DetailsModel

<div class="lg:flex lg:items-center lg:justify-between">
    <div class="min-w-0 flex-1">
        <h2 class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight">
            Packet @Model.Visit.PACKET
        </h2>

        <div class="mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap sm:space-x-6">
            <div class="mt-2 flex items-center text-sm text-gray-500">
                <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75" />
                </svg>
                @("UDS" + Model.Visit.FORMVER)
            </div>

            <div class="mt-2 flex items-center text-sm text-gray-500">
                <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                    .128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z" />
                </svg>
                @Model.Visit.CreatedBy
            </div>

            <div class="mt-2 flex items-center text-sm text-gray-500">
                <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z" clip-rule="evenodd" />
                </svg>
                Visit on @Model.Visit.VISIT_DATE.ToLongDateString()
            </div>

            <div class="mt-2 flex items-center text-sm text-gray-500">
                @Model.Visit.Status.ToString()
            </div>

            <div id="ErrorCount">
                @if (Model.Visit.TotalUnresolvedErrorCount.HasValue && Model.Visit.TotalUnresolvedErrorCount != 0)
                {
                    <div class="mt-2 flex items-center text-sm text-red-800 group relative">
                        <svg class="h-5 w-5 text-red-400 mr-1.5 flex-shrink-0" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16ZM8.28 7.22a.75.75 0 0 0-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06L10 11.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L11.06 10l1.72-1.72a.75.75 0 0 0-1.06-1.06L10 8.94 8.28 7.22Z" clip-rule="evenodd"></path>
                        </svg>

                        <button type="button"
                                onclick="toggleErrorModal(true)"
                                class="font-medium underline text-red-800 hover:text-red-900 focus:outline-none">
                            @Model.Visit.TotalUnresolvedErrorCount.Value errors
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="mt-5 flex lg:ml-4 lg:mt-0">
        <span class="sm:ml-3">
            @if (Model.Visit.CanBeFinalized)
            {
                <a asp-page="Finalize" asp-route-id="@Model.Visit.Id" class="bg-indigo-600 inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-white shadow-sm">
                    <svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                    </svg>
                    Finalize packet
                </a>
            }
            else
            {
                <button type="button" disabled class="bg-gray-300 inline-flex items-center rounded-md px-3 py-2 text-sm font-semibold text-white shadow-sm">
                    <svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z" clip-rule="evenodd" />
                    </svg>
                    Finalize packet
                </button>
            }
        </span>
    </div>
</div>

<div id="errorModal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[80vh] overflow-y-auto p-6">
        <div id="ErrorList">
            <div class="bg-white z-20 flex justify-between items-center border-b border-gray-200 pb-4 mb-4 shadow-sm">
                <h3 class="text-xl font-semibold text-gray-900">Unresolved Errors</h3>

                <div class="flex items-center gap-2">
                    <form method="post" asp-page-handler="ResolveAllErrors">
                        <input type="hidden" name="Id" value="@Model.Visit.Id" />
                        <button type="submit" class="inline-flex items-center rounded-md bg-green-100 px-3 py-1.5 text-xs font-medium text-green-800 hover:bg-green-200 focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-green-400">
                            Resolve All
                        </button>
                    </form>

                    <button onclick="toggleErrorModal(false)" class="text-gray-400 hover:text-gray-600 text-2xl leading-none focus:outline-none">
                        <span aria-hidden="true">&times;</span>
                        <span class="sr-only">Close</span>
                    </button>
                </div>
            </div>


            @if (Model.Visit.UnresolvedErrors != null && Model.Visit.UnresolvedErrors.Any())
            {
                <ul class="space-y-6">
                    @foreach (var error in Model.Visit.UnresolvedErrors)
                    {
                        <li class="border border-gray-200 rounded-lg p-4 shadow-sm bg-white">
                            <div class="mb-2">

                                <div class="flex items-center gap-2 mb-1">
                                    <h4 class="text-sm font-medium text-indigo-700">@error.FormKind</h4>
                                    <span class="text-xs font-semibold px-2 py-0.5 rounded
                                                @(error.Level == PacketSubmissionErrorLevel.Critical || error.Level == PacketSubmissionErrorLevel.Error
                                                                                      ? "bg-red-100 text-red-800"
                                                                                      : "bg-yellow-100 text-yellow-800")">
                                @error.Level
                            </span>
                        </div>

                                <p class="text-sm text-gray-700">@error.Message</p>
                            </div>

                            <div class="mt-4 flex items-center gap-2">
                                <form method="post" asp-page-handler="ResolveError">
                                    <input type="hidden" name="errorId" value="@error.Id" />
                                    <input type="hidden" name="Id" value="@Model.Visit.Id" />
                                    <button type="submit" class="inline-flex items-center gap-1 rounded-md border border-transparent bg-green-600 px-3 py-1.5 text-xs font-medium text-white shadow-sm hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-1">
                                        <svg class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
                                        </svg>
                                        Resolve
                                    </button>
                                </form>

                                <form method="post" asp-page-handler="IgnoreError">
                                    <input type="hidden" name="errorId" value="@error.Id" />
                                    <button type="submit" class="inline-flex items-center gap-1 rounded-md border border-gray-300 bg-white px-3 py-1.5 text-xs font-medium text-gray-700 shadow-sm hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-offset-1">
                                        Ignore
                                    </button>
                                </form>
                            </div>
                        </li>
                                }
                </ul>
            }
            else
            {
                <p class="text-sm text-gray-500">No unresolved errors found.</p>
            }

            <div class="sticky bottom-0 mt-8 text-right">
                <button onclick="toggleErrorModal(false)" class="inline-flex items-center rounded-md bg-gray-200 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-gray-400">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

    <script>
        function toggleErrorModal(show) {
            const modal = document.getElementById("errorModal");
            if (show) {
                modal.classList.remove("hidden");
                modal.classList.add("flex");
            } else {
                modal.classList.remove("flex");
                modal.classList.add("hidden");
            }
        }
    </script>
